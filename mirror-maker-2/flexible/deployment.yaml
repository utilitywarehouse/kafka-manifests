apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app mm2
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
        policy.semaphore.uw.io/name: "mirror-maker-2"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: *app
          imagePullPolicy: IfNotPresent
          image: bitnami/kafka:3.4
          env:
            - name: KAFKA_HEAP_OPTS
              value: -Xmx4G -Xms4G
          command:
            #  the config is mounted from a config map created in kustomization.yaml
            - sh
            - -ecx
            - /opt/bitnami/kafka/bin/connect-mirror-maker.sh /config/connect-mirror-maker.properties
          lifecycle:
            # stop the java process with a prestop hook, otherwise the TERM signal doesn't get to the process, since it is spawned by the connect-mirror-maker.sh
            preStop:
              exec:
                command: ["/bin/sh", "-c", "kill $(ps -ef | grep java | grep -v grep | awk '{print $2}')"]
          resources:
            requests:
              cpu: 400m
              memory: 400Mi
            limits:
              cpu: "2"
              memory: 8000Mi
          volumeMounts:
            - name: mm2-cfg
              mountPath: /config
      volumes:
        - name: mm2-cfg
          configMap:
            name: mm2-cfg
